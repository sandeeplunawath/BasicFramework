package tafe;

import static io.restassured.RestAssured.given;

import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;

import org.hamcrest.Matchers;
import org.testng.annotations.Test;


import io.restassured.RestAssured;
import io.restassured.config.RestAssuredConfig;
import io.restassured.config.SSLConfig;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class TAFE_API_Tests2 extends Suite_Base {


	@Test
	public void TestCase1() {
		
		calculateRequest.inputs.add(new Inputs(1,"tom","check"));
		calculateRequest.inputs.add(new Inputs(2,"ciai","check"));
		calculateRequest.inputs.add(new Inputs(3,"hary","check"));

		calculateRequest.inputs.get(0).tag = "20";
		System.out.println(calculateRequest.inputs.get(0).tag);
		
	}
	
	@Test
	public void TestCase2() {
	    URI systemURI = null;
		// @formatter:off
	    RestAssured
	        .given()
	            .accept(ContentType.JSON)
	        .when()
	            .get(systemURI)
	        .then()
	            .statusCode(200)
	            .body("name", Matchers.is("error-system"))
	            .body("errors.size()", Matchers.is(1))
	            .body("errors[0].snitchUri", Matchers.is("http://cereebro.nope"))
	            .body("errors[0].message", Matchers.not(Matchers.isEmptyOrNullString()))
	            // cause (Throwable) should not be serialized
	            .body("errors[0].cause", Matchers.nullValue());
	    // @formatter:on
	}

}
